"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3029],{3905:(e,t,l)=>{l.d(t,{Zo:()=>u,kt:()=>m});var n=l(7294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function d(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function p(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var o=n.createContext({}),i=function(e){var t=n.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):d(d({},t),e)),l},u=function(e){var t=i(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=i(l),s=a,m=c["".concat(o,".").concat(s)]||c[s]||k[s]||r;return l?n.createElement(m,d(d({ref:t},u),{},{components:l})):n.createElement(m,d({ref:t},u))}));function m(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,d=new Array(r);d[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[c]="string"==typeof e?e:a,d[1]=p;for(var i=2;i<r;i++)d[i]=l[i];return n.createElement.apply(null,d)}return n.createElement.apply(null,l)}s.displayName="MDXCreateElement"},7536:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>i});var n=l(3117),a=(l(7294),l(3905));const r={title:"Sound.Tidal.Safe.Boot",slug:"/library/modules/Sound.Tidal.Safe.Boot"},d=void 0,p={unversionedId:"library/autogenerated/Sound-Tidal-Safe-Boot/Sound-Tidal-Safe-Boot",id:"library/autogenerated/Sound-Tidal-Safe-Boot/Sound-Tidal-Safe-Boot",title:"Sound.Tidal.Safe.Boot",description:"\x3c!------------------------------------------------------------------------------",source:"@site/docs/library/autogenerated/Sound-Tidal-Safe-Boot/Sound-Tidal-Safe-Boot.mdx",sourceDirName:"library/autogenerated/Sound-Tidal-Safe-Boot",slug:"/library/modules/Sound.Tidal.Safe.Boot",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Safe.Boot",draft:!1,editUrl:"https://github.com/tidalcycles/tidal-doc/tree/main/docs/library/autogenerated/Sound-Tidal-Safe-Boot/Sound-Tidal-Safe-Boot.mdx",tags:[],version:"current",lastUpdatedBy:"Matthew Kaney",lastUpdatedAt:1673207986,formattedLastUpdatedAt:"Jan 8, 2023",frontMatter:{title:"Sound.Tidal.Safe.Boot",slug:"/library/modules/Sound.Tidal.Safe.Boot"},sidebar:"library",previous:{title:"Sound.Tidal.Pattern",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Pattern"},next:{title:"Sound.Tidal.Safe.Context",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Safe.Context"}},o={},i=[{value:"p",id:"p",level:3},{value:"hush",id:"hush",level:3},{value:"list",id:"list",level:3},{value:"mute",id:"mute",level:3},{value:"unmute",id:"unmute",level:3},{value:"solo",id:"solo",level:3},{value:"unsolo",id:"unsolo",level:3},{value:"once",id:"once",level:3},{value:"first",id:"first",level:3},{value:"asap",id:"asap",level:3},{value:"nudgeAll",id:"nudgeall",level:3},{value:"all",id:"all",level:3},{value:"resetCycles",id:"resetcycles",level:3},{value:"setcps",id:"setcps",level:3},{value:"xfade",id:"xfade",level:3},{value:"xfadeIn",id:"xfadein",level:3},{value:"histpan",id:"histpan",level:3},{value:"wait",id:"wait",level:3},{value:"waitT",id:"waitt",level:3},{value:"jump",id:"jump",level:3},{value:"jumpIn",id:"jumpin",level:3},{value:"jumpIn&#39;",id:"jumpin-1",level:3},{value:"jumpMod",id:"jumpmod",level:3},{value:"mortal",id:"mortal",level:3},{value:"interpolate",id:"interpolate",level:3},{value:"interpolateIn",id:"interpolatein",level:3},{value:"clutch",id:"clutch",level:3},{value:"clutchIn",id:"clutchin",level:3},{value:"anticipate",id:"anticipate",level:3},{value:"anticipateIn",id:"anticipatein",level:3},{value:"forId",id:"forid",level:3},{value:"d1",id:"d1",level:3},{value:"d2",id:"d2",level:3},{value:"d3",id:"d3",level:3},{value:"d4",id:"d4",level:3},{value:"d5",id:"d5",level:3},{value:"d6",id:"d6",level:3},{value:"d7",id:"d7",level:3},{value:"d8",id:"d8",level:3},{value:"d9",id:"d9",level:3},{value:"d10",id:"d10",level:3},{value:"d11",id:"d11",level:3},{value:"d12",id:"d12",level:3},{value:"d13",id:"d13",level:3},{value:"d14",id:"d14",level:3},{value:"d15",id:"d15",level:3},{value:"d16",id:"d16",level:3},{value:"setI",id:"seti",level:3},{value:"setF",id:"setf",level:3},{value:"setS",id:"sets",level:3},{value:"setR",id:"setr",level:3},{value:"setB",id:"setb",level:3}],u={toc:i};function c(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"p"},"p"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"p :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"hush"},"hush"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hush :: Op () \n")),(0,a.kt)("h3",{id:"list"},"list"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"list :: Op () \n")),(0,a.kt)("h3",{id:"mute"},"mute"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mute :: ID -> Op () \n")),(0,a.kt)("h3",{id:"unmute"},"unmute"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unmute :: ID -> Op () \n")),(0,a.kt)("h3",{id:"solo"},"solo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"solo :: ID -> Op () \n")),(0,a.kt)("h3",{id:"unsolo"},"unsolo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsolo :: ID -> Op () \n")),(0,a.kt)("h3",{id:"once"},"once"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"once :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"first"},"first"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"first :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"asap"},"asap"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"asap :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"nudgeall"},"nudgeAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nudgeAll :: Double -> Op () \n")),(0,a.kt)("h3",{id:"all"},"all"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"all :: (ControlPattern -> ControlPattern) -> Op () \n")),(0,a.kt)("h3",{id:"resetcycles"},"resetCycles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"resetCycles :: Op () \n")),(0,a.kt)("h3",{id:"setcps"},"setcps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setcps :: Pattern Double -> Op () \n")),(0,a.kt)("h3",{id:"xfade"},"xfade"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"xfade :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"xfadein"},"xfadeIn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"xfadeIn :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"histpan"},"histpan"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"histpan :: ID -> Int -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"wait"},"wait"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"wait :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"waitt"},"waitT"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"waitT :: ID -> (Time -> [ControlPattern] -> ControlPattern) -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"jump"},"jump"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jump :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"jumpin"},"jumpIn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jumpIn :: ID -> Int -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"jumpin-1"},"jumpIn'"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jumpIn' :: ID -> Int -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"jumpmod"},"jumpMod"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jumpMod :: ID -> Int -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"mortal"},"mortal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mortal :: ID -> Time -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"interpolate"},"interpolate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interpolate :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"interpolatein"},"interpolateIn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interpolateIn :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"clutch"},"clutch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"clutch :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"clutchin"},"clutchIn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"clutchIn :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"anticipate"},"anticipate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"anticipate :: ID -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"anticipatein"},"anticipateIn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"anticipateIn :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"forid"},"forId"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"forId :: ID -> Time -> ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"d1"},"d1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d1 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d2"},"d2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d2 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d3"},"d3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d3 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d4"},"d4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d4 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d5"},"d5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d5 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d6"},"d6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d6 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d7"},"d7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d7 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d8"},"d8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d8 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d9"},"d9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d9 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d10"},"d10"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d10 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d11"},"d11"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d11 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d12"},"d12"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d12 :: Pattern ValueMap -> Op () \n")),(0,a.kt)("h3",{id:"d13"},"d13"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d13 :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"d14"},"d14"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d14 :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"d15"},"d15"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d15 :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"d16"},"d16"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"d16 :: ControlPattern -> Op () \n")),(0,a.kt)("h3",{id:"seti"},"setI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setI :: String -> Pattern Int -> Op () \n")),(0,a.kt)("h3",{id:"setf"},"setF"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setF :: String -> Pattern Double -> Op () \n")),(0,a.kt)("h3",{id:"sets"},"setS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setS :: String -> Pattern String -> Op () \n")),(0,a.kt)("h3",{id:"setr"},"setR"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setR :: String -> Pattern Rational -> Op () \n")),(0,a.kt)("h3",{id:"setb"},"setB"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"setB :: String -> Pattern Bool -> Op () \n")))}c.isMDXComponent=!0}}]);