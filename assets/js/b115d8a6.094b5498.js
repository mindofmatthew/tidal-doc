"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8014],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),u=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},w=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),w=a,h=p["".concat(d,".").concat(w)]||p[w]||s[w]||o;return r?n.createElement(h,l(l({ref:t},c),{},{components:r})):n.createElement(h,l({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=w;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}w.displayName="MDXCreateElement"},9275:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(3117),a=(r(7294),r(3905));const o={title:"Sound.Tidal.Show",slug:"/library/modules/Sound.Tidal.Show"},l=void 0,i={unversionedId:"library/autogenerated/Sound-Tidal-Show/Sound-Tidal-Show",id:"library/autogenerated/Sound-Tidal-Show/Sound-Tidal-Show",title:"Sound.Tidal.Show",description:"\x3c!------------------------------------------------------------------------------",source:"@site/docs/library/autogenerated/Sound-Tidal-Show/Sound-Tidal-Show.mdx",sourceDirName:"library/autogenerated/Sound-Tidal-Show",slug:"/library/modules/Sound.Tidal.Show",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Show",draft:!1,editUrl:"https://github.com/tidalcycles/tidal-doc/tree/main/docs/library/autogenerated/Sound-Tidal-Show/Sound-Tidal-Show.mdx",tags:[],version:"current",lastUpdatedBy:"Matthew Kaney",lastUpdatedAt:1673207986,formattedLastUpdatedAt:"Jan 8, 2023",frontMatter:{title:"Sound.Tidal.Show",slug:"/library/modules/Sound.Tidal.Show"},sidebar:"library",previous:{title:"Sound.Tidal.Scales",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Scales"},next:{title:"Sound.Tidal.Simple",permalink:"/tidal-doc/docs/library/modules/Sound.Tidal.Simple"}},d={},u=[{value:"show",id:"show",level:3},{value:"showAll",id:"showall",level:3},{value:"draw",id:"draw",level:3},{value:"drawLine",id:"drawline",level:3},{value:"drawLineSz",id:"drawlinesz",level:3},{value:"stepcount",id:"stepcount",level:3},{value:"showStateful",id:"showstateful",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"show"},"show"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"show :: Show a => a -> String \n")),(0,a.kt)("p",null,"A specialised variant of ",(0,a.kt)("inlineCode",{parentName:"p"},"showsPrec"),", using precedence context\nzero, and returning an ordinary ",(0,a.kt)("inlineCode",{parentName:"p"},"String"),"."),(0,a.kt)("h3",{id:"showall"},"showAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"showAll :: Show a => Arc -> Pattern a -> String \n")),(0,a.kt)("h3",{id:"draw"},"draw"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"draw :: Pattern Char -> Render \n")),(0,a.kt)("h3",{id:"drawline"},"drawLine"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"drawLine :: Pattern Char -> Render \n")),(0,a.kt)("h3",{id:"drawlinesz"},"drawLineSz"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"drawLineSz :: Int -> Pattern Char -> Render \n")),(0,a.kt)("h3",{id:"stepcount"},"stepcount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"stepcount :: Pattern a -> Int \n")),(0,a.kt)("h3",{id:"showstateful"},"showStateful"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"showStateful :: ControlPattern -> String \n")))}p.isMDXComponent=!0}}]);